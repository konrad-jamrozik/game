@using UfoGame.Cards.Components
@using UfoGame.Model
@using UfoGame.Model.Data
@using UfoGame.ViewModel
@inject ViewStateRefresh ViewStateRefresh
@inject SickBay SickBay
@inject Agents Agents
@inject MissionSite MissionSite

<div class="list-group-item" aria-current="true">
    <div class="container-fluid px-0">
        @* Row with the agent list item header: name, important details, button to expand details, etc. *@
        <div class="row px-2">
            @* The leftmost column of the agent list item header, with name and stats underneath
                col-auto (not strictly necessary): narrow the cell horizontally to fit the button
                me-auto (not strictly necessary): expand End Margin to the max, pushing remaining columns to the right
            *@
            <div class="col col-auto me-auto">
                <div class="row">
                    @* turned-off-to-do Longest name that fits: Stanisława Andruszkiewicz. Need to truncate. See https://getbootstrap.com/docs/5.3/helpers/text-truncation/ *@
                    <h5 class="ps-0 @NameTextColor">@Agent.Data.FullName</h5>
                </div>
                <div class="row row-cols-auto">
                    <div class="col ps-0">Exp: @Agent.ExperienceBonus()</div>
                    <div class="col">Time to recover: @Agent.TimeToRecover(SickBay.Data.AgentRecoverySpeed)</div>
                </div>
            </div>
            @* The middle column of the agent list item header, with the "i" button 
                col-auto: narrow the cell horizontally to fit the button
                align-self-center: narrow the button area vertically, to fit the label "i"
            *@
            <div class="col col-auto align-self-center">
                <button class="btn btn-primary" type="button"
                        data-bs-toggle="collapse" data-bs-target="#agentInfo_@Index"
                        aria-expanded="false" aria-controls="agentInfo_@Index">
                    i
                </button>
            </div>
            @* The rightmost column of the agent list item header, with the slider and "send" label underneath *@
            <div class="col col-auto px-0">
                <div class="d-flex flex-column align-items-center">
                    <div class="form-check form-switch ps-0">
                        <input class="form-check-input ms-0" type="checkbox" role="switch"
                               id="flip_switch_@Index"
                               disabled="@(!MissionSite.CurrentlyAvailable || !Agent.CanSendOnMission)"
                               @onchange="@(eventArgs => OnChangeAgentMissionAssignment(eventArgs.Value!))"
                               checked="@Agent.Data.AssignedToMission"/>
                    </div>
                    <label class="form-check-label" for="flip_switch_@Index">Send</label>
                </div>
            </div>
        </div>
        @* Row, hidden by default, with the agent details card. *@
        <div class="row collapse px-0" id="agentInfo_@Index">
            <Card Title="Agent info">
                <CardDataRow Label="Id" Value="@Agent.Data.Id"/>
                <CardDataRow Label="Salary" Value="@Agent.Salary"/>
                <CardDataRow Label="Remaining recovery" Value="@Agent.Data.Recovery"/>
                <CardDataRow Label="Training time" Value="@Agent.TrainingTime()"/>
                <CardDataRow Label="Time spent recovering" Value="@Agent.Data.TimeSpentRecovering"/>
                <CardDataRow Label="Time hired" Value="@Agent.Data.TimeHired"/>
                <CardDataRow Label="Time employed" Value="@Agent.TimeEmployed()"/>
                <CardDataRow Label="Total missions" Value="@Agent.TotalMissions"/>
                <CardDataRow Label="Successful missions" Value="@Agent.Data.SuccessfulMissions"/>
                <CardDataRow Label="Failed missions" Value="@Agent.Data.FailedMissions"/>
                <CardDataRow Label="Time spent recovering" Value="@Agent.Data.TimeSpentRecovering"/>
                @* Note that presence of CardButtonWithModal precludes usage of list-group-item-action as its css
                   class for hover interferes with the modal display.
                *@
                <CardButtonWithModal
                    PlayerAction="_sackAgentPlayerAction"
                    Index="Index"
                    Label="Sack agent"
                    Body="@($"Sack agent {Agent.Data.FullName}?")"/>
            </Card>
        </div>
    </div>
</div>

@code 
{
    [Parameter, EditorRequired]
    public int Index { get; set; }

    #nullable disable
    [Parameter, EditorRequired]
    public Agent Agent { get; set; }
    #nullable enable

    #nullable disable
    private SackAgentPlayerAction _sackAgentPlayerAction;
    #nullable enable

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        _sackAgentPlayerAction = new SackAgentPlayerAction(ViewStateRefresh, Agents, Agent);
    }

    private void OnChangeAgentMissionAssignment(object eventArgsValue)
    {
        bool isChecked = (bool)eventArgsValue;
        if (isChecked)
            Agent.AssignToMission();
        else
            Agent.UnassignFromMission();
        ViewStateRefresh.Trigger();
    }

    private string NameTextColor
        => Agent.IsRecovering ? "text-danger" : "";
}
